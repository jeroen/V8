3.2.0
 - Fix bug with pointer compression feature-test on Debian / Anaconda
 - Linux: increase JS stack limit, because of problems with new libv8 on Fedora.
 - Add FatalErrorHandler and MessageListener callbacks (that just print stuff)
 - Fix UBSAN error during teardown (package unload)

3.1.0
 - Fix configure script for pointer compression in upcoming V8 engine 8.4
 - MacOS: binary packagess now ship with V8 engine 8.3

3.0.2
 - Windows: fix text encoding bug introduced in 3.0 for non-ascii text.
 - Fix unit test for big-endian systems

3.0.1
 - Fix build for old versions of R using old compilers that do not default to C++11

3.0
 - Internal rewrite of object serialization to prepare for wasm
 - Automatically convert raw vectors to/from Uint8Array in eval/get/assign
 - Experimental wasm API + test
 - Fix callback API crashes in V8 7.9+ (Jan Marvin, #70, #71, #75)
 - Build with -DV8_ENABLE_CHECKS to get better error messages

2.3
 - Fix for removed API in libv8 version 7.7

2.2
 - Fixes for API changes in libv8 version 7.4 and 7.5
 - MacOS: fix include/linker path for new location of v8

2.1
 - Remove special casing for libnode-dev on Debian: libnode-dev now
   officially provides and symlinks libv8-dev.
 - Fix build for new V8 7.3.492.22 (Jan Marvin, #55)

2.0
 - Major upgrade: now support libv8 version 6.x and up. Note that this means
   we move to ES2015+ adding support for promises, async, etc. This may change
   the behavior of certain JavaScript libraries.
 - For now we also still stupport building with legacy V8 (3.14)
 - Debian Buster: support building with libnode-dev
 - Fedora: support building with v8-devel (V8 6.7.17)
 - MacOS: update binary package to V8 7.2.502.24

1.6 (unreleased)
 - Let Rcpp generated R_init_V8()
 - Add unit test for the exception problem on OSX 10.11

1.5
 - Homebrew has moved V8 (again), now it's called v8@3.15

1.4
 - Fix autobrew for OSX Mavericks

1.3
 - Extract autobrew script to separate repo
 - Add symbol registration

1.2
 - Improve configure script to check for the correct version of libv8
 - Fedora 25+ requires v8-314-devel instead of v8-devel

1.1
 - Use C++ 'new' and 'delete' instead of nodelist to keep contexts in scope

1.0.3
 - Update homebrew URL in configure script

1.0.2
 - Update URL of browserify logo

1.0.1
 - Fix internal stop() function for new testthat
 - ctx$eval(character(0)) does not raise error anymore
 - Remove references to new_context() in favor of v8()
 - Use the new 'COMPILED_BY' variable on windows
 - Updated the URL to the V8 homepage in DESCRIPTION

1.0
 - Remove UTF-8 workarounds now that Rcpp has proper UTF-8 support

0.10
 - Add the console.r callback JavaScript api

0.9
 - Fix for OSX cran builder
 - Add 'v8' as a more descriptive alias for 'new_context'
 - Update libv8 on Windows to 3.15
 - Add support for the new windows tool chain

0.8
 - Fix configure script for OSX
 - Add 'v8' as a more descriptive alias for 'new_context'
 - Update libv8 on Windows to 3.15
 - Add support for the new windows tool chain

0.7
 - Deprecated support for I() removed. Use JS() instead
 - Refactored configure script to use pkg-config if available.
 - Updated libv8 brew script on OSX to v8-3.15
 - Update libv8 static builds on windows to v3.14.5.10
 - Ship separate libraries for win32 for more recent compilers

0.6
 - Breaking change: use JS() instead of I() to mark strings as literal JavaScript.
 - ct$source() now always assumes UTF-8 data, even on Windows.
 - Use the new V8_types.h feature from Rcpp 0.11.5
 - Start with custom code completion within ct$console() for R 3.2.0

0.5
 - Add support for Typed Arrays
